seq(obs)
gapminder[1, "gdp"] <- gapminder[1, "pop"] * gapminder[1, "gpdPercap"]
gapminder[1, "pop"] * gapminder[1, "gpdPercap"]
gapminder[1, "pop"]
gapminder[1, "gpdPercap"]
head(gapminder)
gapminder <- gapminder %>% select(-gpd)
library(tidyverse)
gapminder <- gapminder %>% select(-gpd)
gapminder <- gapminder %>% select(-gdp)
obs <- nrow(gapminder)
for (i in seq(obs)) {
gapminder[i, "gdp"] <- gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
head(gapminder)
# create a vector of values that you want to repeat the function for
obs <- seq(nrow(gapminder))
obs
obs <- seq_along(nrow(gapminder))
obs
# create a vector of values that you want to repeat the function for
obs <- 1:nrow(gapminder))
# create a vector of values that you want to repeat the function for
obs <- 1:nrow(gapminder)
obs
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "log_gdpPercap"] <- log(gapminder[i, "gdpPercap"])
gapminder[i, "log_pop"] <- log(gapminder[i, "pop"])
}
head(gapminder)
le_by_year <- data.frame(year = unique(gapminder$year),
mean_le = NA)
# Create the vector to loop over
years <- unique(gapminder$year)
for (i in years) {
le_by_year[i, "mean_le"] <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
)
}
le_by_year <- data.frame(year = unique(gapminder$year),
mean_le = NA)
# Create the vector to loop over
years <- unique(gapminder$year)
for (i in years) {
le_by_year[i, "mean_le"] <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
}
le_by_year
le_by_year <- data.frame(year = unique(gapminder$year),
mean_le = NA)
# Create the vector to loop over
years <- unique(gapminder$year)
for (i in years) {
le_by_year <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
}
for (i in years) {
le_by_year <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
}
le_by_year
rm(le_by_year)
le_by_year <- c(NULL)
for (i in years) {
le_by_year$i <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
}
years <- unique(gapminder$year)
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
paste0(i, ": ", mean_le)
}
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
paste0(i, ": ", mean_le)
}
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
cat(i, ": ", mean_le)
}
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
for (i in years) {
mean_le <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
paste0(i, ": ", mean_le)
}
for (i in years) {
mean_le <- mean(gapminder[gapminder$year == i, "lifeExp"],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
mean(gapminder[gapminder$year == 1952, "lifeExp"], na.rm = T)
gapminder[gapminder$year == 1952, "lifeExp"]
knitr::opts_chunk$set(echo = TRUE, fig.height = 4.35, fig.width = 4.75)
data(gapminder, package = "gapminder")
head(gapminder)
class(gapminder)
glimpse(gapminder)
gapminder[gapminder$year == 1952, "lifeExp"]
mean(gapminder[gapminder$year == 1952, "lifeExp"], na.rm = T)
conts <- unique(gapminder$continent)
for (i in conts) {
mean_le <- mean(gapminder[gapminder$continent == i, "lifeExp"],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
gapminder$gdpPercap
log_gdpPercap <- log(gapminder$gdpPercap)
gapminder$vec_log_gdpPercap <- log(gapminder$gdpPercap)
gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap
gapminder$vec_log_gdpPercap
gapminder$log_gdpPercap
log(gapminder$gdpPercap)
gapminder$vec_log_gdpPercap <- log(gapminder$gdpPercap)
gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap
gapminder$vec_log_gdpPercap
gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap
all(gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap)
viz_lm(gapminder, "lifeExp", "gdpPercap", 1977)
viz_lm <-
function(df, dv, iv, year) {
dat <- df[df[["year"]] == year, ]
y <- log(dat[[dv]])
x <- log(dat[[iv]])
fit <- lm(y ~ x)
plot(y ~ x, main = year,
xlab = iv, ylab = dv)
lines(x, predict(fit), col = 'blue')
}
viz_lm(gapminder, "lifeExp", "gdpPercap", 1977)
here::here()
gapminder5 <- read.csv("data/gapminder5.csv", stringsAsFactors=FALSE)
head(gapminder5)
head(gapminder)
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "log_gdpPercap"] <- log(gapminder[i, "gdpPercap"])
gapminder[i, "log_pop"] <- log(gapminder[i, "pop"])
}
obs <- 1:nrow(gapminder)
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "log_gdpPercap"] <- log(gapminder[i, "gdpPercap"])
gapminder[i, "log_pop"] <- log(gapminder[i, "pop"])
}
head(gapminder)
gapminder$vec_log_gdpPercap == gapminder$log_gdpPercap
year<-2002
if(any(gapminder$year == year)){
print(paste("Record(s) for the year",year,"found."))
} else {
print(paste("No records for year",year))
}
thresholdValue <- 50
for(i in unique(gapminder$continent)) {
tmp <- mean(gapminder$lifeExp[gapminder$continent==i])
if(tmp < thresholdValue) {
print(paste("Average Life Expectancy in", i, "is less than", thresholdValue))
} else {
print(paste("Average Life Expectancy in", i, "is greater than", thresholdValue))
} # end if else condition
}
lowerThreshold <- 50
upperThreshold <- 70
for(iCountry in unique(gapminder$country)){
tmp <- mean(gapminder$lifeExp[gapminder$country==iCountry])
if(tmp < lowerThreshold){
print(paste("Average Life Expectancy in", iCountry, "is less than", lowerThreshold))
}
else if(tmp > lowerThreshold & tmp < upperThreshold){
print(paste("Average Life Expectancy in", iCountry, "is between", lowerThreshold, "and", upperThreshold))
}
else{
print(paste("Average Life Expectancy in", iCountry, "is greater than", upperThreshold))
}
}
threshold <- 60
for (i in unique(gapminder$continent)) {
tmp <- mean(gapminder$lifeExp[gapminder$continent==i])
if (tmp < threshold) {
print(paste("Mean Life Expectancy in", i, "is less than", threshold))
} else {
print(paste("Mean Life Expectancy in", i, "is greater than", threshold))
}
}
threshold <- 70
for (i in unique(gapminder$continent)) {
tmp <- mean(gapminder$lifeExp[gapminder$continent==i])
if (tmp < threshold) {
print(paste("Mean Life Expectancy in", i, "is less than", threshold))
} else {
print(paste("Mean Life Expectancy in", i, "is greater than", threshold))
}
}
lower_threshold <- 50
upper_threshold <- 70
for(i in unique(gapminder$country)){
tmp <- mean(gapminder$lifeExp[gapminder$country==i])
if(tmp < lower_threshold){
print(paste("Average Life Expectancy in", i, "is less than", lower_threshold))
}
else if(tmp > lower_threshold & tmp < upper_threshold){
print(paste("Average Life Expectancy in", i, "is between", lower_threshold, "and", upper_threshold))
}
else{
print(paste("Average Life Expectancy in", i, "is greater than", upper_threshold))
}
}
overall_mean <- mean(gapminder$pop)
for (i in unique(gapminder$country)) {
country_mean <- mean(gapminder$pop[gapminder$country==i])
if (country_mean < overall_mean) {
print(paste("Average Life Expectancy in", i, "is", country_mean))
}
}
overall_mean <- mean(gapminder$pop)
for (i in unique(gapminder$country)) {
country_mean <- mean(gapminder$pop[gapminder$country==i])
if (country_mean < overall_mean) {
mean_le <- mean(gapminder$lifeExp[gapminder$country==i])
print(paste("Average Life Expectancy in", i, "is", mean_le))
}
}
thresholdValue <- 50
for(iContinent in unique(gapminder$continent)) {
tmp <- mean(gapminder$lifeExp[gapminder$continent==iContinent])
if(tmp < thresholdValue) {
print(paste("Average Life Expectancy in", iContinent, "is less than", thresholdValue))
} else {
print(paste("Average Life Expectancy in", iContinent, "is greater than", thresholdValue))
} # end if else condition
}
lower_threshold <- 50
upper_threshold <- 70
for (i in unique(gapminder$continent)){
tmp <- mean(gapminder$lifeExp[gapminder$continent==i])
if (tmp < lower_threshold){
print(paste("Average Life Expectancy in", i, "is less than", lower_threshold))
}
else if (tmp > lower_threshold & tmp < upper_threshold){
print(paste("Average Life Expectancy in", i, "is between", lower_threshold, "and", upper_threshold))
}
else{
print(paste("Average Life Expectancy in", i, "is greater than", upper_threshold))
}
}
getwd()
gapminder <- read.csv("bootcamp-2018/data/gapminder5.csv", stringsAsFactors=FALSE)
gapminder <- read.csv(here::here("data/gapminder5.csv", stringsAsFactors=FALSE)
school <- read.csv(here::here("data/nys_schools.csv"))
census <- read.csv(here::here("data/nys_acs.csv"))
library(tidyverse)
school_dat <- school %>% left_join(nys_acs, by = c("county_name", "year"))
school_dat <- school %>% left_join(census, by = c("county_name", "year"))
school_dat <- school %>% right_join(census, by = c("county_name", "year"))
summary(lm(mean_ela_score ~ county_per_poverty))
summary(lm(mean_ela_score ~ county_per_poverty, data = school_dat))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm - T), county_per_poverty = county_per_poverty) summary(lm(mean_ela ~ county_per_poverty, data = school_dat))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm - T), county_per_poverty = county_per_poverty) summary(lm(mean_ela ~ county_per_poverty, data = .))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm - T), county_per_poverty = county_per_poverty) %>% summary(lm(mean_ela ~ county_per_poverty, data = .))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm = T), county_per_poverty = county_per_poverty) %>% summary(lm(mean_ela ~ county_per_poverty, data = .))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm = T), county_per_poverty = mean(county_per_poverty, na.rm = T)) %>% summary(lm(mean_ela ~ county_per_poverty, data = .))
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm = T), county_per_poverty = mean(county_per_poverty, na.rm = T)) %>% lm(mean_ela ~ county_per_poverty, data = .)) %>% summary()
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm = T), county_per_poverty = mean(county_per_poverty, na.rm = T)) %>% lm(mean_ela ~ county_per_poverty, data = .) %>% summary()
school_dat <- school_dat %>% na_if(-99)
school_dat %>% group_by(county_name, year) %>% summarize(mean_ela = mean(mean_ela_score, na.rm = T), county_per_poverty = mean(county_per_poverty, na.rm = T)) %>% lm(mean_ela ~ county_per_poverty, data = .) %>% summary()
View(school_dat)
View(school)
install.packages('tidyverse')
install.packages('data.table')
log(10)
log(10, base = 10)
1+1 == 2
typeof(x)
x=2
typeof(x)
library(tidyverse)
set.seed(1234)
x1 <- rnorm(5)
x2 <- rnorm(20, mean=0.5)
x1
x2
x1[3]
x1[0]
x1[1]
x1[x1<0]
x2[x2 > 1]
x2[x2 > 1]
x2[x2 > 1]
x2[1:5]
x3 <- x2[1:5]
x1[-3]
x1
data(mtcars)
dim(mtcars)
mtcars[4,]
mtcars
mtcars[4,:]
getwd
getwd()
gapminder <- read.csv("data/gapminder5.csv", stringsAsFactors=FALSE)
gapminder
gapminder <- read_csv("data/gapminder5.csv")
library(readr)
gapminder <- read_csv("data/gapminder5.csv")
gapminder
table(gapminder)
summaryz(gapminder)
summary(gapminder)
table(gapminder$year)
table(gapminder)
table(country)
table(gapminder$continent)
mean(gapminder$pop)
gapminder07 <- subset(gapminder, subset = year==2007)
table(gapminder07$continent)
sort(table(gapminder07$continent))
gapminder07$pop[gapminder07$country=="Mexico"]
order(table(gapminder07$continent))
gapminder07$pop[gapminder07$country=="Mexico"]
order(table(gapminder07$continent))
gapminder07$pop[gapminder07$country=="Mexico"]
table(gapminder07$continent)
order(table(gapminder07$continent))
aggregate(gapminder07$lifeExp ~ gapminder07$continent, FUN = mean)
cor(gapminder07$lifeExp, gapminder07$gdpPercap)
t1 <- t.test(gapminder07$gdpPercap~gapminder07$lifeExp_highlow)
t1 <- t.test(gdpPercap~lifeExp_highlow, data=gapminder07)
gapminder07$lifeExp_over70 <- NA  # Initialize a variable containing all "NA" values
gapminder07$lifeExp_over70[gapminder07$lifeExp>70] <- "Yes"
gapminder07$lifeExp_over70[gapminder07$lifeExp<70] <- "No"
table(gapminder07$lifeExp_over70)
gapminder07$lifeExp_highlow <- NA
gapminder07$lifeExp_highlow[gapminder07$lifeExp>mean(gapminder07$lifeExp)] <- "High"
gapminder07$lifeExp_highlow[gapminder07$lifeExp<mean(gapminder07$lifeExp)] <- "Low"
table(gapminder07$lifeExp_highlo
aa
gapminder07$lifeExp_highlow <- NA
gapminder07$lifeExp_highlow[gapminder07$lifeExp>mean(gapminder07$lifeExp)] <- "High"
gapminder07$lifeExp_highlow[gapminder07$lifeExp<mean(gapminder07$lifeExp)] <- "Low"
table(gapminder07$lifeExp_highlow)
t1 <- t.test(gdpPercap~lifeExp_highlow, data=gapminder07)
t1
gapminder07$gdpPercap
gapminder07$lifeExp_highlow
t1
t1[1]
t1[2]
t1[3]
t1[4]
# Conduct a linear regression predicting 'lifeExp' as a function of 'gdpPercap' and 'pop', and store the results as reg1.
reg1 = lm(lifeExp ~ gdpPercap + pop, data = gapminder07)
# Print out reg1.
print(reg1)
help(lm
)
summary.lm(lifeExp ~ gdpPercap + pop, data = gapminder07)
summary(reg1)
write.csv(gapminder07, file = "data/gapminder07.csv", row.names = FALSE)
write_csv(gapminder07, file = "data/gapminder07.csv", row.names = FALSE)
write.csv(gapminder07, file = "data/gapminder07.csv", row.names = FALSE)
write.csv(gapminder07, file = "data/gapminder07.csv", row.names = FALSE)
write.csv(gapminder07, file = "data/11111111.csv", row.names = FALSE)
hist(gapminder07$lifeExp)
# Create a histogram of the variable 'lifeExp' in gapminder07
hist(gapminder07$lifeExp, main="Distribution of life expectancy across countries in 2007",
xlab="Life expectancy", ylab="Frequency")
hist(gapminder07$lifeExp, main="Distribution of life expectancy across countries in 2007",
xlab="Life expectancy", ylab="Frequency", breaks = 10)
hist(gapminder07$lifeExp, main="Distribution of life expectancy across countries in 2007",
xlab="Life expectancy", ylab="Frequency")
# Bonus: Change the `breaks = ` argument from its default setting and see what happens.
hist(gapminder07$lifeExp, breaks = 5, main="Distribution of life expectancy across countries in 2007",
xlab="Life expectancy", ylab="Frequency")
# Bonus: Change the `breaks = ` argument from its default setting and see what happens.
hist(gapminder07$lifeExp, breaks = 20, main="Distribution of life expectancy across countries in 2007",
xlab="Life expectancy", ylab="Frequency")
plot(lifeExp, gdpPercap, data = gapminder07)
plot(lifeExp ~ gdpPercap, data = gapminder07)
# Add a title and axis labels.
plot(lifeExp ~ gdpPercap, data = gapminder07, main="Relationship between life expectancy and GDP per capita in 2007",
ylab="Life expectancy", xlab="GDP per capita")
# Add a title and axis labels.
plot(lifeExp ~ gdpPercap, data = gapminder07, main="Relationship between life expectancy and GDP per capita in 2007",
ylab="Life expectancy", xlab="GDP per capita") + abline()
abline(h = mean(gapminder07$lifeExp))
help(abline)
clear()
h = mean(gapminder07$lifeExp)
rm(list = ls())
gapminder <- read.csv(here::here("data", "gapminder5.csv"))
head(gapminder)
gapminder <- read.csv(here::here("data", "gapminder5.csv")）
gapminder <- read.csv(here::here("data", "gapminder5.csv"))
install.packages("here")
here::here("data", "gapminder.csv")
"/Users/rap168/Documents/GitHub/bootcamp-2019"
gapminder <- read.csv(here::here("data", "gapminder5.csv"))
head(gapminder)
str(gapminder)
View(gapminder)
gapminder$country <- as.character(gapminder$country)
gapminder$continent <- as.character(gapminder$continent)
str(gapminder)
View(gapminder)
View(gapminder)
answers<-params$answers
answers<-params$answers
# create a vector of values that you want to repeat the function for
obs <- 1:nrow(gapminder)
# initialize the for loop with `for (i in vector)`
for (i in obs) { # the function to repeat is enclosed in braces {}
gapminder[i, "gdp"] <- gapminder[i, "pop"] * gapminder[i, "gdpPercap"]
}
gapminder
obs <- 1:nrow(gapminder)
for (i in obs) {
gapminder[i, "log_gdpPercap"] <- log(gapminder[i, "gdpPercap"])
gapminder[i, "log_pop"] <- log(gapminder[i, "pop"])
}
gapminder
obs <- 1:nrow(gapminder)
for (i in obs) {
gapminder[i, "log_gdpPercap"] <- log(gapminder[i, "gdpPercap"])
gapminder[i, "log_pop"] <- log(gapminder[i, "pop"])
}
log(10)
log(2.7)
years <- unique(gapminder$year)
for (i in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$year == i],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
conts <- unique(gapminder$continent)
for (i in conts) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i],
na.rm = T)
print(paste0(i, ": ", mean_le))
}
for (i in conts) {
print(paste0("Continent: ", i))
for (j in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", mean_le))
}
}
for (i in conts) {
print(paste0("Continent: ", i))
for (j in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", mean_le))
}
}
for (i in conts) {
print(paste0("Continent: ", i))
for (j in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", mean_le))
}
}
for (i in conts) {
print(paste0("Continent: ", i))
for (j in years) {
mean_le <- mean(gapminder$lifeExp[gapminder$continent == i &
gapminder$year == j],
na.rm = T)
print(paste0(j, ": ", mean_le))
}
}
# want to find the mean for each stat in gapminder
vars <- gapminder[, c("lifeExp", "pop", "gdpPercap")]
apply(vars, 2, mean)
lapply(gapminder, mean)
i <-  1987 # define the interator
while (i <= 2002) {
sd_le <- sd(gapminder$lifeExp[gapminder$year == i])
print(paste0(i, ": ", sd_le)
)
i <- i + 1 # increase the iterator by the interval between years
}
i
print('woshi',i)
print(paste('woshi',i))
threshold <- 1987
for (i in years) {
if (i >= 1987) {
mean_pop <- mean(gapminder$lifeExp[gapminder$year == i])
print(paste0(i, ": ", mean_pop))
} else {
print("Sorry, year is less than 1987")
}
}
for (i in years) {
if (i >= 1987) {
mean_pop <- mean(gapminder$pop[gapminder$year == i])
print(paste0(i, ": ", mean_pop))
} else {
print("Sorry, year is less than 1987")
}
}
